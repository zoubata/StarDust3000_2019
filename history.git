    1  ifconfig
    2  sudo apt-get install openssh-server
    3  r:192.168.10.93  Bca
    4  sudo systemctl enable ssh.service
    5  sudo ufw allow 22
    6  sudo systemctl restart ssh.service
    7  sudo apt-get install gparted
    8  sudo pi-update 
    9  sudo rpi-update 
   10  sudo sh -c 'echo "deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main" > /etc/apt/sources.list.d/ros-latest.list'
   11  sudo apt-key adv --keyserver hkp://ha.pool.sks-keyservers.net:80 --recv-key 421C365BD9FF1F717815A3895523BAEEB01FA116
   12  sudo apt-get update
   13  sudo apt-get install -y ros-kinetic-desktop-full git python-wstool vim
   14  sudo apt-get install -y make gcc
   15  sudo apt-get install -y arduino
   16  sudo halt
   17  sudo fallocate -l 512m /512m.swap
   18  sudo chmod 600 /512m.swap 
   19  sudo mkswap /512m.swap 
   20  git clone https://github.com/julienbayle/stardust
   21  sudo swapon /512m.swap
   22  top
   23  df -h
   24  top
   25  sudo apt-get install -y vim 
   26  python -c "$(curl -fsSL https://raw.githubusercontent.com/platformio/platformio/develop/scripts/get-platformio.py)"
   27  top
   28  sudo pip install luma.led_matrix
   29  sudo raspi-config 
   30  sudo apt-get install gparted
   31  sudo gparted
   32  sudo swapon /512m.swap
   33  ~/stardust/scripts/update.sh
   34  sudo swapoff /512m.swap
   35  cd ~/stardust/ros/
   36  source devel/setup.bash
   37  ls
   38  git clone https://github.com/julienbayle/stardust
   39  df
   40  df -h
   41  sudo swapon /512m.swap
   42  ~/stardust/scripts/update.sh
   43  sudo swapoff /512m.swap
   44  cd ~/stardust/ros/
   45  source devel/setup.bash
   46  sudo sh -c 'echo "deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main" > /etc/apt/sources.list.d/ros-latest.list'
   47  sudo apt-key adv --keyserver hkp://ha.pool.sks-keyservers.net:80 --recv-key 421C365BD9FF1F717815A3895523BAEEB01FA116
   48  sudo apt-get update
   49  sudo apt-get install -y ros-kinetic-desktop-full git python-wstool vim
   50  sudo rosdep init
   51  sudo apt-get install -y ros-kinetic-desktop-full git python-wstool vim
   52  Stardust
   53  Logo
   54  Installation sur Raspberry Pi 3 modèle B
   55  Ubuntu 16.04 doit être utilisé car cette distribution et version de linux propose directement les dépôts ARM de ROS Kinetic, compatible sur raspberry pi 3.
   56  L’utilisation de Raspbian a été testé mais l’outil “rosdep” ne trouve pas dans les dépôts de cette distribution tous les paquets nécessaires. Aussi, il faut les compiler manuellement, ce qui est super pénible et prend beaucoup de temps.
   57  Deux distributions d’Ubuntu pour Raspberry 3 ont été testées.
   58  La première est issue de la page https://wiki.ubuntu.com/ARM/RaspberryPi. Ce fût une total castastrophe (apt-upgrade bugue, démarrage en échec après un simple apt-get install, wifi non stable, ping lents, …)
   59  La seconde était la bonne : https://ubuntu-mate.org/download/
   60  Compter à peu près 2 heures pour réaliser cette installation
   61  Installation de la distribution Ubuntu 16.04
   62  Récupérer l’image “Ubuntu 16.04” depuis https://ubuntu-mate.org/download/ Ecrire l’image sur une SD CARD (Mac OS version) :
   63  brew install xz
   64  diskutil umountDisk /dev/disk2
   65  xzcat ubuntu-mate-16.04.2-desktop-armhf-raspberry-pi.img.xz | sudo dd bs=4m of=/dev/rdisk2
   66  Mettre la carte dans le Raspberry Pi et l’allumer. Connecter une câble ethernet, un écran via le port HDMI et une souris. Compléter alors la procédure d’installation qui s’affiche à l’écran.
   67  Activation du SSH
   68  sudo apt-get install openssh-server
   69  sudo systemctl enable ssh.service
   70  sudo ufw allow 22
   71  sudo systemctl restart ssh.service
   72  Mise à jour du système
   73  Puis, mise à jour du système et redémarrage :
   74  sudo apt-get update
   75  sudo apt-get upgrade
   76  rosdep update
   77  echo "source /opt/ros/kinetic/setup.bash" >> ~/.bashrc
   78  source ~/.bashrc
   79  rosdep update
   80  echo "source /opt/ros/kinetic/setup.bash" >> ~/.bashrc
   81  source ~/.bashrc
   82  sudo swapon /512m.swap
   83  ~/stardust/scripts/update.sh
   84  make -j4 -l4
   85  ~/stardust/scripts/update.sh
   86  echo "r1" > ~/stardust/scripts/robot.id
   87  ~/stardust/scripts/update.sh
   88  sudo apt install joystick 
   89  jstest /dev/input/js0
   90  sudo apt install joystick  jstest
   91  sudo pip install luma.led_matrix
   92  sudo reboot
   93  ifconfig
   94  vim /boot/config.txt
   95  vim /boot/cmdline.txt 
   96  sudo vim /boot/cmdline.txt 
   97  sudo vim /boot/config.txt
   98  cd ~/stardust/ros/
   99  source devel/setup.bash
  100  USER=`whoami`
  101  sudo usermod -a -G dialout $USER
  102  sudo systemctl disable hciuart
  103  i2cdetect -y 1
  104  sudo pip install luma.led_matrix
  105  ~/stardust/scripts/update.sh*
  106  sudo halp
  107  sudo halt
  108  sudo apt install proftpd
  109  sudo apt install eclipse
  110  sudo apt install toto
  111  sudo apt install titi
  112  sudo apt install vnc
  113  ls /var/lib/dpkg/
  114  ls /var/lib/dpkg/ -alh
  115  rm /var/lib/dpkg/lock*
  116  sudo rm /var/lib/dpkg/lock*
  117  ls /var/lib/dpkg/ -alh
  118  sudo apt install vnc
  119  sudo apt install proftpd
  120  sudo nano /etc/proftpd/proftpd.conf
  121  sudo service proftpd reload
  122  ls
  123  cd lidar/
  124  ls
  125  cd ROS/
  126  ls
  127  cd Ros/
  128  ls
  129  cd ydlidar_v1.3.1/
  130  ls
  131  cd ydlidar-master/
  132  ls
  133  cd r
  134  src/
  135  ls
  136  ls -alh
  137  cd src/
  138  ls
  139  cd ..
  140  catkin_make
  141  cd ../..
  142  cd ../../..
  143  ls /dev/
  144  minicom -b 9600 -o -D /dev/serial
  145  sudo apt install minicom
  146  sudo rm /var/lib/dpkg/lock-frontend
  147  sudo rm /var/lib/dpkg/lock
  148  sudo apt install minicom
  149  minicom -b 230400 -o -D /dev/serial
  150  minicom -b 230400 -s -D /dev/serial
  151  minicom -b 230400 -o -D /dev/serial
  152  sudo chmod 777 /dev/serial
  153  minicom -b 230400 -o -D /dev/serial
  154  screen /dev/serial/ 230400
  155  sudo apt install screen
  156  sudo rm /var/lib/dpkg/lock-frontend
  157  sudo rm /var/lib/dpkg/lock
  158  sudo apt install screen
  159  sudo dpkg --configure -a
  160  sudo apt install screen
  161  ls -l /dev/ttyUSB0
  162  ls -l /dev/serial
  163  ls /dev/
  164  ls -l /dev/ttyUSB0
  165  minicom -b 230400 -o -D /dev/ttyUSB0 
  166  IFCONFIG
  167  ifconfig
  168  history
  169  vncserver
  170  vnc4server
  171  ps -aux
  172  ps -aux | grep r1
  173  ps -aux | grep min
  174  minicom -b 230400 -o -D /dev/ttyUSB0 
  175  ls
  176  minicom -b 230400 -o -D /dev/ttyUSB0 
  177  top
  178  sudo halt
  179  top
  180  ls
  181  history | grep sh
  182  vim  ~/stardust/scripts/update.sh
  183  cd stardust/
  184  git status
  185  ls
  186  git status
  187  cd ..
  188  sit status
  189  git status
  190  git add .viminfo stardust/
  191  git commit -m"save"
  192  git push
  193  git config credential.helper store
  194  git pull
  195  git status
  196  git push
  197  git config --global credential.helper cache
  198  git config --global credential.helper 'cache --timeout=3600'
  199  git config --global user.password "gizoPierre06"
  200  git config --global user.name "zoubata"
  201  git push
  202  git status
  203  cat .gitconfig 
  204  history > history.git
